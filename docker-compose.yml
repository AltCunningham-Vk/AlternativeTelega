services:
  telega-backend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=telega;Username=postgres;Password=12345
      - Minio__Endpoint=minio:9000
      - Minio__AccessKey=minioadmin
      - Minio__SecretKey=minioadmin
      - Minio__Secure=false
      - Redis__ConnectionString=redis:6379
    depends_on:
      - postgres
      - minio
      - redis
    deploy:
      resources:
        limits:
          cpus: '4.0'
          memory: 3G
    networks:
      - telega-network

  postgres:
    image: postgres:latest
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=12345
      - POSTGRES_DB=telega
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5     
    networks:
      - telega-network  

  minio:
    image: minio/minio:latest
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    volumes:
      - minio-data:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - telega-network  

  redis:
    image: redis:7
    volumes:
      - redis-data:/data
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5 
    networks:
      - telega-network

volumes:
  postgres-data:
  minio-data:
  redis-data:

networks:
  telega-network:
    driver: bridge