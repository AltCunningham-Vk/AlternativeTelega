name: dockercompose12469789216205296692
services:
  minio:
    environment:
      MINIO_User: minioadmin
      MINIO_password: minioadmin;
    image: minio:20
    networks:
      telega-network: null
    ports:
      - mode: ingress
        target: 9000
        published: "9000"
        protocol: tcp
    volumes:
      - type: volume
        source: minio-data
        target: /data
        volume: {}
  postgres:
    environment:
      POSTGRES_DB: telega
      POSTGRES_PASSWORD: "12345"
      POSTGRES_USER: postgres
    image: postgres:16
    networks:
      telega-network: null
    ports:
      - mode: ingress
        target: 5432
        published: "5432"
        protocol: tcp
    volumes:
      - type: volume
        source: postgres-data
        target: /var/lib/postgresql/data
        volume: {}
  redis:
    image: redis:7
    networks:
      telega-network: null
    ports:
      - mode: ingress
        target: 6379
        published: "6379"
        protocol: tcp
    volumes:
      - type: volume
        source: redis-data
        target: /data
        volume: {}
  telega.presentation:
    build:
      context: C:\Users\vladk\source\repos\Telega
      dockerfile: Telega.Presentation/Dockerfile
    depends_on:
      minio:
        condition: service_started
        required: true
      postgres:
        condition: service_started
        required: true
      redis:
        condition: service_started
        required: true
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "8080"
      ASPNETCORE_HTTPS_PORTS: "8081"
      ConnectionString: redis:6379
      ConnectionStrings__DefaultConnection: Host=localhost;Port=5432;Database=telega;Username=postgres;Password=12345
    image: telegapresentation
    networks:
      telega-network: null
    ports:
      - mode: ingress
        target: 8080
        published: "8080"
        protocol: tcp
      - mode: ingress
        target: 8080
        protocol: tcp
      - mode: ingress
        target: 8081
        protocol: tcp
    volumes:
      - type: volume
        source: dataprotection-keys
        target: /home/app/.aspnet/DataProtection-Keys
        volume: {}
      - type: bind
        source: C:\Users\vladk\AppData\Roaming/Microsoft/UserSecrets
        target: /home/app/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\vladk\AppData\Roaming/Microsoft/UserSecrets
        target: /root/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\vladk\AppData\Roaming/ASP.NET/Https
        target: /home/app/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\vladk\AppData\Roaming/ASP.NET/Https
        target: /root/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
networks:
  telega-network:
    name: dockercompose12469789216205296692_telega-network
    driver: bridge
volumes:
  dataprotection-keys:
    name: dockercompose12469789216205296692_dataprotection-keys
  minio-data:
    name: dockercompose12469789216205296692_minio-data
  postgres-data:
    name: dockercompose12469789216205296692_postgres-data
  redis-data:
    name: dockercompose12469789216205296692_redis-data